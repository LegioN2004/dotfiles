# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack NF Regular 9 

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+q kill

#run dmenu(suckless) with the following command 
# bindsym $mod+d exec --no-startup-id dmenu_run
# bindsym $mod+d exec rofi -show drun -lines 3 -eh 2 -width 100 -padding 800 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd" -font "System San Francisco Display 18"
# bindsym $mod+p exec --no-startup-id rofi -show drun -show-icons -lines 8 -columns 3 -eh 2 -width 74 -padding 200 -opacity "40"
bindsym $mod+p exec  rofi -show drun 
bindsym $mod+d exec  rofi -show run

# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1." 
set $ws2 "2."
set $ws3 "3."
set $ws4 "4."
set $ws5 "5."
set $ws6 "6."
set $ws7 "7.﬏"
set $ws8 "8."
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace  $ws1 
bindsym $mod+2 workspace  $ws2
bindsym $mod+3 workspace  $ws3
bindsym $mod+4 workspace  $ws4
bindsym $mod+5 workspace  $ws5
bindsym $mod+6 workspace  $ws6
bindsym $mod+7 workspace  $ws7
bindsym $mod+8 workspace  $ws8
bindsym $mod+9 workspace  $ws9
bindsym $mod+0 workspace  $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace  $ws1
bindsym $mod+Shift+2 move container to workspace  $ws2
bindsym $mod+Shift+3 move container to workspace  $ws3
bindsym $mod+Shift+4 move container to workspace  $ws4
bindsym $mod+Shift+5 move container to workspace  $ws5
bindsym $mod+Shift+6 move container to workspace  $ws6
bindsym $mod+Shift+7 move container to workspace  $ws7
bindsym $mod+Shift+8 move container to workspace  $ws8
bindsym $mod+Shift+9 move container to workspace  $ws9
bindsym $mod+Shift+0 move container to workspace  $ws10

# assining apps to individual workspaces
#following 3 lines are custom
#assign [class="~/.cargo/bin/alacritty"] $ws3
# assign [class="Min"] $ws2
# assign [class="xfce4-terminal"] $ws3
# assign [class="Shotcut"] $ws5
# assign [class="obs"] $ws6
assign [class="neovide"] $ws7
assign [class="Subl"] $ws8
assign [class="VSCodium"] $ws7
assign [class="firefox"] $ws2
assign [class="Brave-browser"] $ws2
# assign [class="Google-chrome"] $ws2
assign [class="vlc"] $ws6
assign [class="Org.gnome.Nautilus"] $ws4
assign [class="TelegramDesktop"] $ws8

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        #changed the size from 10 px or 10 ppt to 5
        bindsym h resize shrink width 2 px or 2 ppt 
        bindsym j resize grow height 2 px or 2 ppt
        bindsym k resize shrink height 2 px or 2 ppt
        bindsym l resize grow width 2 px or 2 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 2 px or 2 ppt
        bindsym Down resize grow height 2 px or 2 ppt
        bindsym Up resize shrink height 2 px or 2 ppt
        bindsym Right resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#colors are a little customized like that of nord theme

set $bg-color 	         #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          #00ff00
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color #00ff00
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          #00ff00


#polybar launch script
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh
# exec_always --no-startup-id polybar

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
#to use i3blocks install it explicitly otherwise dependencies don't get fulfilled
# for bumblebee status bar u will need extra psutil from pip to show cpu meter (you can install bumblebee status from pip also)
#     status_command i3blocks -c ~/.i3/i3blocks.conf
 status_command ~/.local/bin/bumblebee-status \
  -t  dracula-powerline \
  -m  cpu memory disk pasink battery datetime -p cpu.interval=3s memory.interval=10s pasink.interval=1s datetime.interval=1s \

   colors {
     background $bg-color
       separator #757575
#  	                   border             background         text
       focused_workspace  $bg-color          $bg-color          $text-color
       inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
       urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
   }
   position top 
}

bindsym $mod+shift+x exec i3lock -i ~/Pictures/Wallpapers/minimal-landscape-wallpaper-1366x768-wallpaper.jpg

#custom commnads for laptops like brightness and battery 
# after installing light do these sudo apt install light && sudo chmod +s /usr/bin/light
# Sreen brightness controls
bindsym XF86MonBrightnessUp  exec light -A 5 # increase screen brightness
bindsym XF86MonBrightnessDown  exec light -U 5 # decrease screen brightness

# Touchpad controls
bindsym XF86TouchpadToggle exec /.i3/toggletouchpad.sh # toggle touchpad

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous


exec_always feh --bg-scale /home/sunny/Pictures/arch-linux-logo-colorful.jpg
# randomize wallpapers when with feh after every reload
# exec_always --no-startup-id  /usr/bin/feh  -n 22 --randomize --bg-fill /home/sunny/Pictures/wallpapers/nordic-wallpapers/wallpapers/* 

exec_always --no-startup-id ~/Downloads/i3-alternating-layout/alternating_layouts.py

exec_always picom --experimental-backends -b
# exec_always picom 

bindsym $mod+n exec redshift -P -O 2500
bindsym $mod+shift+n exec redshift -x

# Screenshots
bindsym Print exec --no-startup-id maim "/home/$USER/Pictures/Screenshots/$(date)"
bindsym $mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/Screenshots/$(date)"
bindsym Shift+Print exec --no-startup-id maim --select "/home/$USER/Pictures/Screenshots/$(date)"

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id maim | xclip -selection clipboard -t image/png
bindsym Ctrl+$mod+Print exec --no-startup-id maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
bindsym Ctrl+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard -t image/png

#always run xinput list-props "xinput set-prop "ETPS/2 Elantech Touchpad" and run the following commands to set tap to click and natural scrolling 
exec_always --no-startup-id xinput set-prop "ETPS/2 Elantech Touchpad" "libinput Tapping Enabled" 1
exec_always --no-startup-id xinput set-prop "ETPS/2 Elantech Touchpad" "libinput Natural Scrolling Enabled" 1


#hide title bar 
default_border pixel 1
default_floating_border pixel 1
for_window [class="^.*"] border pixel 1

#for_window [class="^.*"] border pixel 1
#new_window 1pixel

#sxhkd autostart
exec_always sxhkd -c ~/.config/sxhkd/sxhkdrc

#dont know if this works but set up for colemak
# exec --no-startup-id setxkbmap -model pc104 -layout us,de -variant colemak, -option "grp:alt_shift_toggle,shift:both_capslock,ctrl:swapcaps"

#remap for keyboard via xmodmap
# exec_always --no-startup-id xmodmap ~/.Xmodmap
# exec --no-startup-id setxkbmap -option "shift:both_capslock,ctrl:swapcaps"
# exec_always --no-startup-id setxkbmap -layout us -variant colemak -option ctrl:swapcaps

# gnome's authorization agent to mount drives and adding passwords whenever necessary
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

exec_always xset r rate 300 50
